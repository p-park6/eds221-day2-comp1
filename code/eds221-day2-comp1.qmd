---
title: "eds221-day2-comp1"
format: html
editor: visual
execute: 
  warning: false
---

# Making and indexing data in R

### Vectors
Making vectors
```{r}
dogs <- c("teddy", "khora", "waffle", "banjo", "tallie", "molly", "simba")

#check the class of dogs
typeof(dogs)
class(dogs)
```
```{r}
my_breakfast <- c("waffles", 2, TRUE, "coffee")

typeof(my_breakfast)
class(my_breakfast)
#vector can only contain one type in it
```
```{r}
#numeric vector
weights <- c(50, 60, 25, 35, 55, 20)
typeof(weights)
class(weights)
```
```{r}
weights_integer <- c(50L, 60L, 25L, 35L, 55L, 20L)

typeof(weights_integer)
class(weights_integer)
#is.__ tells us if it is that class or not. will give us true or false option (family of functions to ASK what class something is)
is.numeric(weights_integer)
```
```{r}
#zipcode example
zipcodes <- c(93117, 93118, 93119, 93120, 93121)

class(zipcodes)

#as.__ changes the class (family of functions to recast data classes)
zipcodes_chr <- as.character(zipcodes)
zipcodes_chr
```
# Create a vector with named elements
```{r}
dog_food <- c(teddy = "purina", khora = "alpo", waffle = "fancy feast", banjo = "blue diamond", tallie = "farmer's dog", molly = "yummy treats", simba = "bones")

test <- c(cat = 4, dog = 10, elephant = 11)
class(test)
```
```{r}
#how to access the element/find the value in a vector depending on the position
dog_food[2]
#R uses 1-index
#python and JavaScript use 0-indexing
```

## Access ranges of values in a vector

Use : to refer to a range (low : high)
```{r}
trees <- c("pine", "palm", "christmas", "birch", "orange", "sugar")
trees[3]
trees[3:5]
```
# Warm-up for for loops
```{r}
i <- 3
trees[i]
```
```{r}
#this will override the i from the above code
i <- seq(1:3) #same thing as seq(from = 1, to = 3)
trees[i]
```






